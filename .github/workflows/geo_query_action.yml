name:
  "geo_query action"

on:
  issues:
    types: opened

jobs:
  run_geo_query:
    if: contains(github.event.issue.labels.*.name, 'geo_query')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout geo_datahub
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install geo_query
        run: |
          git clone https://github.com/hassanfa/geo_query.git
          cd geo_query
          pip install -e .

      - name: Parse issue body
        uses: peter-murray/issue-body-parser-action@v3
        id: issue_parser
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          issue_id: ${{ github.event.issue.number }}
          payload_marker: 'payload'

      - name: run geofetch 
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PARSED_JSON='${{ steps.issue_parser.outputs.payload }}'
          mesh1=$(echo "$PARSED_JSON" | jq -r '.mesh1')
          mesh2=$(echo "$PARSED_JSON" | jq -r '.mesh2')
          orgn=$(echo "$PARSED_JSON" | jq -r '.organism')
          OUTPUT_FILE=$(echo "$PARSED_JSON" | jq -r '.geofetchOutput')

          echo "Running geofetch for $mesh1 and $mesh2"
          echo "Output file: $OUTPUT_FILE"

          geofetch -ds 2000/01/01 --entry gse \
          --log-level DEBUG \
          --sample rna --sample mpss  --sample sage \
          --organism "${orgn}" \
          --mesh-operator AND --mesh "${mesh1}" --mesh "${mesh2}"

      - name: Store results
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PARSED_JSON='${{ steps.issue_parser.outputs.payload }}'
          OUTPUT_FILE=$(echo "$PARSED_JSON" | jq -r '.geofetchOutput')
          ISSUE_TITLE=$(gh issue view ${{ github.event.issue.number }} --json title --jq .title)

          if [ -f "$OUTPUT_FILE" ]; then
            mv "$OUTPUT_FILE" results/
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add results/"$OUTPUT_FILE"
            git commit -m "feat: close #${{ github.event.issue.number }} $ISSUE_TITLE"
            git push
            echo "Results stored successfully."
          else
            echo "Error: Output file '$OUTPUT_FILE' was not generated."
            exit 1
          fi
